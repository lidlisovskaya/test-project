pipeline {
    agent any

    parameters {
        choice(name: 'BROWSER', choices: ['chrome', 'firefox'], description: 'Choose the browser to run the tests')
    }

    environment {
        TEST_DIR = 'src/test/resources'
        ALLURE_RESULTS = 'target/allure-results'
        ALLURE_REPORT = 'target/allure-report'
    }

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/lidlisovskaya/test-project.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                bat 'mvn clean install -DskipTests'
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    def browser = params.BROWSER
                    echo "Running tests on ${browser} browser..."

                    def exitCode = bat(returnStatus: true, script: """
                        mvn clean test -Dbrowser=${browser} -Dsurefire.suiteXmlFiles=src/test/resources/smoke.xml
                    """)

                    if (exitCode != 0) {
                        echo "Tests failed, but proceeding to generate Allure reports."
                    }
                }
            }
            post {
                always {
                    echo "Test execution completed (success or failure). Proceeding to Allure report generation."
                }
            }
        }

        stage('Generate Allure Report') {
            steps {
                script {
                    echo "Generating Allure Report..."
                    bat 'mvn allure:report'
                }
            }
            post {
                always {
                    echo "Allure Report generation completed."
                }
            }
        }

        stage('Archive Allure Results') {
            steps {
                script {
                    echo "Archiving Allure results..."
                    allure([
                        includeProperties: false,
                        jdk: '',
                        results: [[path: "${ALLURE_RESULTS}"]]
                    ])
                }
            }
            post {
                always {
                    echo "Allure results archived successfully."
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline execution completed!'
        }
        success {
            echo 'Tests executed successfully!'
        }
        failure {
            echo 'Tests failed! Check logs and reports for details.'
        }
    }
}